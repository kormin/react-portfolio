{"version":3,"sources":["components/Header.js","components/Footer.js","components/About.js","components/titlebar/Options.js","components/Home.js","components/Work.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["menuItems","Header","state","active","name","handleClick","bind","this","setState","Component","Footer","Options","className","Home","Work","id","target","rel","href","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oQAEMA,EAAY,CAChB,CACE,KAAQ,QACR,KAAQ,SAEV,CACE,KAAQ,OACR,KAAQ,SAEV,CACE,KAAQ,UACR,KAAQ,aAuCGC,E,kDAlCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,OAAQH,EAAU,GAAGI,MAEvB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALP,E,wDAQFF,GACVG,KAAKC,SAAS,CAAEL,OAAQC,M,uCAVPK,aCFNC,E,+KAbMD,a,GCADA,Y,uBCaLE,E,uKAVX,OACE,wBAAIC,UAAU,oBACZ,4BAAI,kBAAC,IAAD,OACJ,4BAAI,kBAAC,IAAD,OACJ,4BAAI,kBAAC,IAAD,Y,GANUH,aC2CPI,E,+KAzCIJ,a,gBCiEJK,E,uKA/DX,OACE,yBAAKC,GAAG,OAAOH,UAAU,OACvB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eAAf,kBAEE,4BACE,4BAAI,kBAAC,IAAD,SAGR,yBAAKA,UAAU,iBACb,uBAAGI,OAAO,SAASC,IAAI,sBAAsBC,KAAK,KAChD,kBAAC,IAAD,OAEF,kBAAC,EAAD,QAGJ,yBAAKN,UAAU,mBACb,yBAAKA,UAAU,uBAAf,mBAIF,yBAAKA,UAAU,mBACb,8BACA,6BACE,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACb,2CAEF,yBAAKA,UAAU,sBACb,sCACA,mGACA,+FAEF,yBAAKA,UAAU,sBACb,oCACA,gFACA,kFAEF,yBAAKA,UAAU,sBACb,uCACA,oDACA,gDAIJ,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBACb,6CAEF,yBAAKA,UAAU,wBACb,6FACA,mHAIN,oC,GAzDSH,aCmCJU,E,uKApCX,OACE,yBAAKJ,GAAG,UAAUH,UAAU,OAC1B,yBAAKA,UAAU,mBACb,oDADF,2BAIA,yBAAKA,UAAU,iBACb,uBACEI,OAAO,SACPC,IAAI,sBACJC,KAAK,8BAHP,SADF,YASE,uBACEF,OAAO,SACPC,IAAI,sBACJC,KAAK,iDAHP,YATF,YAiBE,uBACEF,OAAO,SACPC,IAAI,sBACJC,KAAK,+BAHP,gB,GAzBYT,a,YCqBPW,MAZf,WACE,OACE,yBAAKR,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNcS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.46cb559d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst menuItems = [\n  {\n    'name': '>tom_',\n    'link': '#home'\n  },\n  {\n    'name': 'work',\n    'link': '#work'\n  },\n  {\n    'name': 'contact',\n    'link': '#contact'\n  }\n];\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      active: menuItems[0].name\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(name) { \n    this.setState({ active: name });\n  }\n\n  render() {\n    return (\n      // Navigation\n      <div id=\"header\" className=\"row\">\n        <ul className=\"taskbar\">\n          {menuItems.map((menuItem, i) =>\n            <li\n              key={i}\n              className={this.state.active === menuItem.name ? 'active' : ''} \n              onClick={this.handleClick.bind(this, menuItem.name)}\n            >\n              <a href={menuItem.link}>\n                {menuItem.name}\n              </a>\n            </li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      // Footer\n      <footer id=\"footer\" className=\"row\">\n        Written with <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reactjs.org/\">React</a>.\n        <br />\n        &copy; Tom Abao 2020\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"nano\">\n        <span className=\"terminal-user\">tom@desktop</span>\n        <span className=\"terminal-command\">:</span>\n        <span className=\"terminal-directory\">~</span>\n        <span className=\"terminal-command\">$ nano about-me.txt</span>\n        <div className=\"nano-titlebar\">\n          File: /contact.txt\n        </div>\n        <div className=\"nano-content\">\n          I play computer games, read books, and watch movies and television shows.\n          <br />\n          I enjoy the Pokemon games series.\n          <br />\n          I've read all the Harry Potter books.\n          <br />\n          I'm also interested in fitness.\n        </div>\n        <div className=\"nano-options\">\n          Save modified buffer? Y\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { UilMinus, UilSquareShape, UilMultiply } from '@iconscout/react-unicons';\n\nclass Options extends Component {\n  render() {\n    return (\n      <ul className=\"titlebar-options\">\n        <li><UilMinus /></li>\n        <li><UilSquareShape /></li>\n        <li><UilMultiply /></li>\n      </ul>\n    );\n  }\n}\n\nexport default Options;\n","import React, { Component } from 'react';\n\nimport About from './About';\nimport TitlebarOptions from './titlebar/Options';\n\nclass Home extends Component {\n  render() {\n    return (\n      // Home\n      <div id=\"home\" className=\"row\">\n        <div></div>\n        <div>\n          <div className=\"terminal-titlebar\">\n            <b>terminal</b>\n            <TitlebarOptions />\n          </div>\n          <div className=\"terminal-content\">\n            <span className=\"terminal-user\">tom@desktop</span>\n            <span className=\"terminal-command\">:</span>\n            <span className=\"terminal-directory\">~</span>\n            <span className=\"terminal-command\">$ ./greet-visitor</span>\n            <h1>Hello, World!</h1>\n\n            <span className=\"terminal-user\">tom@desktop</span>\n            <span className=\"terminal-command\">:</span>\n            <span className=\"terminal-directory\">~</span>\n            <span className=\"terminal-command\">$ whoami\n            <br />\n            Tom\n            <br />\n            Web Developer\n            <br />\n            Currently building with Python\n            <br /><br />\n            </span>\n\n            <About />\n          </div>\n        </div>\n        <div></div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { UilPlus, UilTimes } from '@iconscout/react-unicons';\n\nimport TitlebarOptions from './titlebar/Options';\n\nclass Work extends Component {\n  render() {\n    return (\n      <div id=\"work\" className=\"row\">\n        <div className=\"browser-titlebar\">\n          <div className=\"browser-tab\">\n            Tom's Portfolio\n            <ul>\n              <li><UilTimes /></li>\n            </ul>\n          </div>\n          <div className=\"browser-space\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"/\">\n              <UilPlus />\n            </a>\n            <TitlebarOptions />\n          </div>\n        </div>\n        <div className=\"browser-toolbar\">\n          <div className=\"browser-address-bar\">\n            localhost:1234\n          </div>\n        </div>\n        <div className=\"browser-content\">\n          <div></div>\n          <div>\n            <div className=\"browser-row\">\n              <div className=\"tech-stack-title\">\n                <h1>Tech Stack</h1>\n              </div>\n              <div className=\"tech-stack-content\">\n                <h4>Python</h4>\n                <p>Libraries: Django Framework, Django REST Framework, Celery, RabbitMQ</p>\n                <p>Tools: Elasticsearch, Google AdWords, EC2, RDS, Docker, Jenkins</p>\n              </div>\n              <div className=\"tech-stack-content\">\n                <h4>Java</h4>\n                <p>Libraries: Spring Framework, Hibernate ORM, JUnit</p>\n                <p>Tools: Jenkins, Oracle Weblogic, SonarQube, Splunk</p>\n              </div>\n              <div className=\"tech-stack-content\">\n                <h4>ReactJS</h4>\n                <p>Libraries: Ant Design</p>\n                <p>Tools: EC2, RDS</p>\n              </div>\n            </div>\n\n            <div className=\"browser-row\">\n              <div className=\"other-skills-title\">\n                <h1>Other Skills</h1>\n              </div>\n              <div className=\"other-skills-content\">\n                <p>C, C++, Android, SQL, HTML, CSS, JavaScript, Vue.js, Bootstrap</p>\n                <p>Amazon Web Services, DigitalOcean Droplets, Git, Ubuntu, JIRA, Confluence, Sentry</p>\n              </div>\n            </div>\n          </div>\n          <div></div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <div id=\"contact\" className=\"row\">\n        <div className=\"contact-message\">\n          <h1>Want to collaborate?</h1>\n          Here's my contact info.\n        </div>\n        <div className=\"contact-links\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"mailto:abaotom14@gmail.com\"\n          >\n            email\n          </a>\n          &nbsp;|&nbsp;\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://ph.linkedin.com/in/tom-abao-09b649113\"\n          >\n            linkedin\n          </a>\n          &nbsp;|&nbsp;\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/tabao-fs\"\n          >\n            github\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from 'react';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Work from './components/Work';\nimport Contact from './components/Contact';\n\nimport './main.css';\nimport './fonts/roboto-regular/stylesheet.css'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <Home />\n      <Work />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}